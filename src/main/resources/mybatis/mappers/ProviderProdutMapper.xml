<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.datangedu.cn.dao.mapper.ProviderProdutMapper">
  <resultMap id="BaseResultMap" type="com.datangedu.cn.model.sysUser.ProviderProdut">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="provider_name" jdbcType="VARCHAR" property="providerName" />
    <result column="provider_id" jdbcType="VARCHAR" property="providerId" />
    <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
    <result column="service_info" jdbcType="VARCHAR" property="serviceInfo" />
    <result column="service_content" jdbcType="VARCHAR" property="serviceContent" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="sales_num" jdbcType="INTEGER" property="salesNum" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="recommend" jdbcType="INTEGER" property="recommend" />
    <result column="necessary" jdbcType="INTEGER" property="necessary" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.datangedu.cn.model.sysUser.ProviderProdut">
    <result column="service_img" jdbcType="LONGVARBINARY" property="serviceImg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, provider_name, provider_id, service_name, service_info, service_content, price, 
    sales_num, region, create_time, recommend, necessary, status
  </sql>
  <sql id="Blob_Column_List">
    service_img
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from provider_produt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider_produt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from provider_produt
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectByLike" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample" resultMap="BaseResultMap">
    select 
    *
    from provider_produt
    where service_name like '%${likeName}%'
    <if test="pageSize>=0">
    limit ${pageSize},${pageNum}
    </if>
  </select>
  <select id="selectByLikeInfo" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from provider_produt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    and service_name like '%${likeName}%'
    order by create_time
   <!--  <if test="pageSize>=0">
    limit ${pageSize},${pageNum}
    
    </if> -->
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from provider_produt
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample">
    delete from provider_produt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.datangedu.cn.model.sysUser.ProviderProdut">
    insert into provider_produt (id, provider_name, provider_id, 
      service_name, service_info, service_content, 
      price, sales_num, region, 
      create_time, recommend, necessary, 
      status, service_img)
    values (#{id,jdbcType=VARCHAR}, #{providerName,jdbcType=VARCHAR}, #{providerId,jdbcType=VARCHAR}, 
      #{serviceName,jdbcType=VARCHAR}, #{serviceInfo,jdbcType=VARCHAR}, #{serviceContent,jdbcType=VARCHAR}, 
      #{price,jdbcType=INTEGER}, #{salesNum,jdbcType=INTEGER}, #{region,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{recommend,jdbcType=INTEGER}, #{necessary,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{serviceImg,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="com.datangedu.cn.model.sysUser.ProviderProdut">
    insert into provider_produt
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="providerName != null">
        provider_name,
      </if>
      <if test="providerId != null">
        provider_id,
      </if>
      <if test="serviceName != null">
        service_name,
      </if>
      <if test="serviceInfo != null">
        service_info,
      </if>
      <if test="serviceContent != null">
        service_content,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="salesNum != null">
        sales_num,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="recommend != null">
        recommend,
      </if>
      <if test="necessary != null">
        necessary,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="serviceImg != null">
        service_img,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="providerName != null">
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceInfo != null">
        #{serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceContent != null">
        #{serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="salesNum != null">
        #{salesNum,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recommend != null">
        #{recommend,jdbcType=INTEGER},
      </if>
      <if test="necessary != null">
        #{necessary,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="serviceImg != null">
        #{serviceImg,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.datangedu.cn.model.sysUser.ProviderProdutExample" resultType="java.lang.Long">
    select count(*) from provider_produt
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update provider_produt
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.providerName != null">
        provider_name = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null">
        provider_id = #{record.providerId,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceName != null">
        service_name = #{record.serviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceInfo != null">
        service_info = #{record.serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceContent != null">
        service_content = #{record.serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=INTEGER},
      </if>
      <if test="record.salesNum != null">
        sales_num = #{record.salesNum,jdbcType=INTEGER},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.recommend != null">
        recommend = #{record.recommend,jdbcType=INTEGER},
      </if>
      <if test="record.necessary != null">
        necessary = #{record.necessary,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.serviceImg != null">
        service_img = #{record.serviceImg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update provider_produt
    set id = #{record.id,jdbcType=VARCHAR},
      provider_name = #{record.providerName,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      service_info = #{record.serviceInfo,jdbcType=VARCHAR},
      service_content = #{record.serviceContent,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      sales_num = #{record.salesNum,jdbcType=INTEGER},
      region = #{record.region,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      recommend = #{record.recommend,jdbcType=INTEGER},
      necessary = #{record.necessary,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      service_img = #{record.serviceImg,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update provider_produt
    set id = #{record.id,jdbcType=VARCHAR},
      provider_name = #{record.providerName,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=VARCHAR},
      service_name = #{record.serviceName,jdbcType=VARCHAR},
      service_info = #{record.serviceInfo,jdbcType=VARCHAR},
      service_content = #{record.serviceContent,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=INTEGER},
      sales_num = #{record.salesNum,jdbcType=INTEGER},
      region = #{record.region,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      recommend = #{record.recommend,jdbcType=INTEGER},
      necessary = #{record.necessary,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.datangedu.cn.model.sysUser.ProviderProdut">
    update provider_produt
    <set>
      <if test="providerName != null">
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null">
        provider_id = #{providerId,jdbcType=VARCHAR},
      </if>
      <if test="serviceName != null">
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
      <if test="serviceInfo != null">
        service_info = #{serviceInfo,jdbcType=VARCHAR},
      </if>
      <if test="serviceContent != null">
        service_content = #{serviceContent,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="salesNum != null">
        sales_num = #{salesNum,jdbcType=INTEGER},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="recommend != null">
        recommend = #{recommend,jdbcType=INTEGER},
      </if>
      <if test="necessary != null">
        necessary = #{necessary,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="serviceImg != null">
        service_img = #{serviceImg,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.datangedu.cn.model.sysUser.ProviderProdut">
    update provider_produt
    set provider_name = #{providerName,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      service_info = #{serviceInfo,jdbcType=VARCHAR},
      service_content = #{serviceContent,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      sales_num = #{salesNum,jdbcType=INTEGER},
      region = #{region,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      recommend = #{recommend,jdbcType=INTEGER},
      necessary = #{necessary,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      service_img = #{serviceImg,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.datangedu.cn.model.sysUser.ProviderProdut">
    update provider_produt
    set provider_name = #{providerName,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=VARCHAR},
      service_name = #{serviceName,jdbcType=VARCHAR},
      service_info = #{serviceInfo,jdbcType=VARCHAR},
      service_content = #{serviceContent,jdbcType=VARCHAR},
      price = #{price,jdbcType=INTEGER},
      sales_num = #{salesNum,jdbcType=INTEGER},
      region = #{region,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      recommend = #{recommend,jdbcType=INTEGER},
      necessary = #{necessary,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>